/* Port definition */

////LAYOUT:
////PERIPHERALS: SERIAL0 SERIAL1 SERIAL2 SPI0 I2C0 ADC0 PWMD0
////CDEFINES: XMC4200_F64x256

const PinInfo const _vhalpinmap[] STORED = {
    /* D0 */ MAKE_PIN(PB, 4, HAS_EXT), /* RX0  */
    /* D1 */ MAKE_PIN(PB, 5, HAS_EXT), /* TX0  */
    /* D2 */ MAKE_PIN(PC, 2, HAS_EXT | HAS_PWM), /* LED0 */
    /* D3 */ MAKE_PIN(PC, 6, HAS_EXT), /* LED1 */
    
    /* D4 */ MAKE_PIN(PA, 1, HAS_EXT | HAS_SER | HAS_PWM | HAS_SPI | HAS_I2C), /* TX1 - MOSI0 - SDA0 */ 
    /* D5 */ MAKE_PIN(PA, 11, HAS_EXT), /* */
    /* D6 */ MAKE_PIN(PA, 0, HAS_EXT | HAS_SER), /* RX1 - MISO0 */
    /* D7 */ MAKE_PIN(PC, 14, HAS_EXT), /* */
    /* D8 */ MAKE_PIN(PB, 3, HAS_EXT | HAS_PWM), /* */
    /* D9 */ MAKE_PIN(PB, 1, HAS_EXT | HAS_PWM), 
    /* D10 */ MAKE_PIN(PB, 0, HAS_EXT | HAS_PWM),             /* */
    /* D11 */ MAKE_PIN(PB, 2, HAS_EXT | HAS_PWM),             /* */
    /* D12 */ MAKE_PIN(PB, 8, HAS_EXT),             /* */
    /* D13 */ MAKE_PIN(PA, 8, HAS_EXT),   /* */
    /* D14 */ MAKE_PIN(PA, 7, HAS_EXT),   /* */
    /* D15 */ MAKE_PIN(PA, 6, HAS_EXT),   /* */
    /* D16 */ MAKE_PIN(PA, 2, HAS_EXT),   /* */
    /* D17 */ MAKE_PIN(PA, 4, HAS_EXT),   /* */
    /* D18 */ MAKE_PIN(PA, 3, HAS_EXT),   /* */
    /* D19 */ MAKE_PIN(PA, 5, HAS_EXT | HAS_PWM),   /* */
    /* D20 */ MAKE_PIN(PA, 9, HAS_EXT | HAS_PWM),   /* */
    /* D21 */ MAKE_PIN(PA, 10, HAS_EXT | HAS_SPI | HAS_I2C),            /* SCLK0 - SCL0 */
    /* D22 */ MAKE_PIN(PK, 14, HAS_EXT | HAS_ADC),  /* */
    /* D23 */ MAKE_PIN(PK, 6, HAS_EXT | HAS_ADC),   /* */  
    /* D24 */ MAKE_PIN(PK, 3, HAS_EXT | HAS_ADC),   /* */
    /* D25 */ MAKE_PIN(PK, 5, HAS_EXT | HAS_ADC),   /* */
    /* D26 */ MAKE_PIN(PK, 4, HAS_EXT | HAS_ADC),   /* */
    /* D27 */ MAKE_PIN(PK, 0, HAS_EXT | HAS_ADC),   /* */
    /* D28 */ MAKE_PIN(PK, 9, HAS_EXT | HAS_ADC),   /* */
    /* D29 */ MAKE_PIN(PC, 7, HAS_EXT),             /* */
    /* D30 */ MAKE_PIN(PK, 8, HAS_EXT | HAS_ADC),   /* */
};

const PinClass const _analogclass[] STORED = {
    /* pin_num, channel, group, 0 */
    /* D22 */ MAKE_PIN_CLASS(22, 6, 1, 0),
    /* D23 */ MAKE_PIN_CLASS(23, 6, 0, 0),
    /* D24 */ MAKE_PIN_CLASS(24, 3, 1, 0),
    /* D25 */ MAKE_PIN_CLASS(25, 0, 5, 0),
    /* D27 */ MAKE_PIN_CLASS(27, 0, 0, 0),
    /* D28 */ MAKE_PIN_CLASS(28, 1, 1, 0),
    /* D30 */ MAKE_PIN_CLASS(30, 0, 1, 0),
};

const PinClass const _spiclass[] STORED = {
    /* pin_num, spi, tx=alt.fn <or> rx=DXn, DX.<CHAR> (for rx pins) */
    /* Note: spi is (USIC*2+CHANNEL) */
    
    /* U1C1 */  
    /* MOSI0 */ MAKE_PIN_CLASS(4, 3, 2, 0),
    /* MISO0 */ MAKE_PIN_CLASS(6, 3, 0, 3),
    /* SCLK0 */ MAKE_PIN_CLASS(21, 3, 2, 0),

};

const PinClass const _i2cclass[] STORED = {
    /* pin_num, i2c, alt.fn, DXn{A=0, B=1, ...}   */
    /* Note: i2c is USIC*2 + CHANNEL */

    /* U1C1 */
    /* SDA0 */ MAKE_PIN_CLASS(4, 3, 2, 0),
    /* SCL0 */ MAKE_PIN_CLASS(21, 3, 2, 0)

};

const PinClass const _pwmclass[] STORED = {
    //phys, timer (0-->UCC40, 1-->UCC41, ..., 4-->UCC80), channel, afio
    /* PWM0 */ MAKE_PIN_CLASS(4, 4, 1, 3),
    /* PWM1 */ MAKE_PIN_CLASS(19, 4, 0, 3),
    /* PWM2 */ MAKE_PIN_CLASS(10, 0, 3, 3),
    /* PWM3 */ MAKE_PIN_CLASS(9, 0, 2, 3),
    /* PWM4 */ MAKE_PIN_CLASS(11, 0, 1, 3),
    /* PWM5 */ MAKE_PIN_CLASS(8, 0, 0, 3),
    /* PWM6 */ MAKE_PIN_CLASS(2, 1, 3, 3),
};


const PinClass const _icuclass[] STORED = {
};

const PinClass const _canclass[] STORED = {
};

const PinClass const _serclass[] STORED = {
    /* pin_num, usart, tx=alt.fn | rx=gpio mode, dxN (rx only) */
    /* Note: usart is USIC*2+CHANNEL      */
    /* RX0  */ MAKE_PIN_CLASS(0, 0, 0, 1),
    /* TX0  */ MAKE_PIN_CLASS(1, 0, 2, 0),

    /* RX1 */ MAKE_PIN_CLASS(6, 3, 0, 3),
    /* TX1 */ MAKE_PIN_CLASS(4, 3, 2, 0),
};

const PinClass const _dacclass[] STORED = {
};

const PinClass const _ledclass[] STORED = {
    /* LED0 */ MAKE_PIN_CLASS(2, 0, 0, 0),
    /* LED1 */ MAKE_PIN_CLASS(3, 0, 0, 0),
};

const PinClass const _btnclass[] STORED = {
};
